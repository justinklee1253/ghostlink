Tech Stack:

Frontend: Next.js/Typescript 
Backend: Flask 




Key Files: 

src/app/layout.tsx: This file defines the layout of your application. It wraps all pages within a consistent structure (like a header and footer) and provides a global structure to your app.

src/app/page.tsx: This is the main page component for your Next.js application. It imports and renders the FileUpload component.

src/app/components/FileUpload.tsx: This component handles the file upload functionality. It allows users to select a file, upload it, and displays the file details (name, size, type) after uploading.



How Next.js & TypeScript Work:

Routing: Next.js uses file-based routing, so page.tsx corresponds to the root route (/).
Rendering: When a user navigates to http://localhost:3000, the content in page.tsx is rendered. This content includes the FileUpload component.
Type Safety: TypeScript ensures that the props, state, and other variables in your components are correctly typed, reducing bugs and improving code quality.


How Flask works: 

Backend server: lask acts as the backend server that handles the file upload, processes the file, and returns the file details to the frontend.

app.py: This file contains the Flask server code. It defines the /api/upload endpoint, which handles POST requests for file uploads. It saves the uploaded file to the server and responds with the fileâ€™s details (name, size, type).

Setup venv
1. python3 -m venv venv ***NAME YOUR virtual environment venv so the gitignore picks it up and doesn't add to main branch
2. run virtual environment: source venv/bin/activate

How to run the flask backend (http://127.0.0.1:8000)
1. cd ghostlink-backend
2. Make sure all requirements installed: pip install -r requirements.txt (update this as you install new dependencies/packages)
3. python app.py with your virtual environment activated ** 

How to run frontend 
1. npm i to install dependencies
2. npm run dev --> http://localhost:3000